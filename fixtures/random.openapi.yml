openapi: 3.0.3

info:
  title: foo
  version: 1.0.0

paths:
  /pet/{petId}:
    parameters:
      - $ref: '#/components/parameters/petId'
    get:
      parameters:
        - $ref: '#/components/parameters/q'
      operationId: GetPet
      summary: Get details for a pet by a given pet ID
      responses:
        200:
          description: OK

  /domain:
    get:
      parameters:
        - $ref: '#/components/parameters/required'
      operationId: describeDomain
      responses:
        200:
          description: OK
        default:
          $ref: '#/components/responses/Default'
    post:
      operationId: CreateDomain
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                domainName:
                  $ref: '#/components/schemas/DomainName'
      responses:
        200:
          description: OK
        default:
          $ref: '#/components/responses/Default'

components:
  parameters:
    petId:
      in: path
      required: true
      name: petId
      description: ID for a pet
      schema:
        type: string
    q:
      in: query
      name: q
      description: Query string parameter
      schema:
        type: string
    required:
      in: query
      required: true
      name: required
      description: Query string parameter
      schema:
        type: string


  responses:
    Default:
      description: Unexpected error
      content:
        application/json:
          schema:
            type: object
            required: [ code, message ]
            properties:
              code:
                type: string
                description: Error code
              message:
                type: string
                description: Error message
              details:
                type: object
            
  schemas:
    DomainName:
      type: string
      description: Domains containing unicode characters must be punycode encoded.
      pattern: ^[a-z0-9-\.]+$
      maxLength: 64
    Foo:
      type: object
      properties:
        bar:
          type: object
          nullable: true
          properties:
            baz:
              type: string
        foo:
          type: array
          nullable: true
          items:
            type: string
        listOfObjects:
          type: array
          nullable: true
          items:
            type: object
            properties:
              prop1:
                type: string
        url:
          type: string
          format: uri
          nullable: true
          description: URL for Foo
    TeamInvitation:
      type: object
      properties:
        stateInlined:
          type: string
          nullable: true
          enum:
            - CREATED
            - ACCEPTED
            - EXPIRED
            - null
        stateRef:
          $ref: '#/components/schemas/TeamInvitationState'
    TeamInvitationState:
      type: string
      nullable: true
      enum:
        - CREATED
        - ACCEPTED
        - EXPIRED
        - null
    AnyOfPrimitive:
      anyOf:
        - type: string
          format: ipv4
        - type: string
          format: ipv6
    BoolOrString:
      oneOf:
        - type: object
          required:
            - op
            - path
          additionalProperties: false
          properties:
            op:
              type: string
            path:
              type: string
        - type: object
          required:
            - value
            - op
            - path
          properties:
            op:
              type: string
            path:
              type: string
            value:
              type: string
        - type: object
          required:
            - value
            - op
            - path
          properties:
            op:
              type: string
            path:
              type: string
            value:
              type: boolean
